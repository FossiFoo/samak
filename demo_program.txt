chans(add-todo)
app = pipes/ui()
initial-todos = pipes/from-seq(["1" "2"])

http = pipes/http()

; ! + literal = (constantly literal)
add-todo-form = ![ui/form :todo-form
                        [ui/form-input {:value chan-name} :todo-text \"Enter Number!\"]
                        [ui/button {:on-click other-chan
                                    :key \"submit-button\"} \"Fetch joke!\"]]

initial-todos | add-todo

; #{...} is a function of one argument that will populate every key
; in the result map with the application of the value to the
; argument, provided the value isn't a literal

add-todo
  | map*(joke -> {:url str("http://api.icndb.com/jokes/" joke)})
  | http
  | map*(r -> get-in(r [:value :joke] "error"))
  | reductions*(conj [])
  | map*(#[!:div [add-todo-form] ui/unordered-list])
  | app


! 5 -> (constantly 5)


5 -> (constantly 5)
"foo" -> (constantly "foo")
:div  -> (constantly :div)
:-div -> :div
